#!/usr/bin/env python

import datetime
import argparse

from mist.api.auth.models import SessionToken


def main():
    argparser = argparse.ArgumentParser(
        description="Delete cookie sessions older than specified age"
    )
    argparser.add_argument('--minutes', type=int, default=0)
    argparser.add_argument('--hours', type=int, default=0)
    argparser.add_argument('--days', type=int, default=0)
    argparser.add_argument(
        '--user', action='store_true',
        help=("Delete anonymous and user sessions in given time range. "
              "By default only anonymous sessions are deleted.")
    )
    argparser.add_argument('--noinput', action='store_true',
                           help="Don't use interactive confirmation.")
    args = argparser.parse_args()

    tdelta = datetime.timedelta(days=args.days, hours=args.hours,
                                minutes=args.minutes)
    qs = SessionToken.objects
    if not args.user:
        qs = qs.filter(user_id__exists=False)
    qs = qs.filter(created_at__lt=datetime.datetime.now() - tdelta)
    count = qs.count()

    print("Found %d %s sessions older than %s." % (
        count, args.user and 'total' or 'anonymous', tdelta
    ))
    if not count:
        return
    if not args.noinput:
        while True:
            resp = input("Continue with deletion? [y/n] ")
            if resp == 'y':
                break
            if resp == 'n':
                return

    deleted = qs.delete()
    print("Deleted %d anonymous sessions" % deleted)


if __name__ == '__main__':
    main()
